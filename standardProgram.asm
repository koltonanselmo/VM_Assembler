SIZE .INT 10
ARR .INT 10
.INT 2
.INT 3
.INT 4
.INT 15
.INT -6
.INT 7
.INT 8
.INT 9
.INT 10
ZERO .INT 0
ONE .INT 1
I .INT 0
SUM .INT 0
TEMP .INT 0
RESULT .INT 0
ONE .INT 1
TWO .INT 2
FOUR .INT 4
S .BYT 83
u .BYT 117
m .BYT 109
s .BYT 115
i .BYT 105
e .BYT 101 
v .BYT 118
n .BYT 110
o .BYT 111
d .BYT 100
SPACE .BYT 32
NEWLINE .BYT 10
; END OF DIRECTIVES PART ONE
DAGS .BYT 68
.BYT 65
.BYT 71
.BYT 83
GADS .INT -99
REL .BYT 61
LESSTHAN .BYT 60
EQUALTO .BYT 61
GREATERTHAN .BYT 62
DASH .BYT 45
; END OF DIRECTIVES PART TWO
LDR 6 I
STARTWHILE LDR 5 SIZE
; START OF OFFSET CODE
LDA 7 ARR
LDR 0 FOUR
MUL 0 6
ADD 7 0
; END OF OFFSET CODE
; START OF SUM CODE
LDR 1 7
LDR 0 SUM
ADD 0 1
STR 0 SUM
; END OF SUM CODE
; START OF EVEN ODD
LDR 0 7
LDR 1 7
LDR 2 TWO
DIV 0 2
MUL 0 2
SUB 0 1
; DONE CHECKING EVEN/ODD AND BRANCHING APPROIATLEY
BNZ 0 ODDVALUE
LDR 3 7
TRP 1
LDB 3 SPACE
TRP 3
LDB 3 i
TRP 3
LDB 3 s
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 e
TRP 3
LDB 3 v
TRP 3
LDB 3 e
TRP 3
LDB 3 n
TRP 3
LDB 3 NEWLINE
TRP 3
JMP SKIP
ODDVALUE LDR 3 7
TRP 1
LDB 3 SPACE
TRP 3
LDB 3 i
TRP 3
LDB 3 s
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 o
TRP 3
LDB 3 d
TRP 3
TRP 3
LDB 3 NEWLINE
TRP 3
; END OF EVEN ODD
SKIP LDR 0 ONE
ADD 6 0
SUB 5 6
; END OF INCREMENT CODE
BNZ 5 STARTWHILE
; START OF SUM OUTPUT
LDB 3 S
TRP 3
LDB 3 u
TRP 3
LDB 3 m
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 i
TRP 3
LDB 3 s
TRP 3
LDB 3 SPACE
TRP 3
LDR 3 SUM
TRP 1
LDB 3 NEWLINE
TRP 3
TRP 3
; END OF SUM OUTPUT
; END OF PART ONE
;
;
;
; START OF PART TWO
;
; STORING DAGS AS INT IN GADS
LDA 0 DAGS
LDR 1 0
STR 1 GADS
;
; FLIPPING THE VALUES OF D AND G
LDA 0 GADS
LDR 1 TWO
ADD 1 0
LDB 4 0
LDB 5 1
STB 5 0
STB 4 1
; STARTING LOOP INIQUALITY
LDR 0 ZERO
LDR 1 ZERO
LDR 2 ZERO
LDR 3 ZERO
LDR 4 I
WHILETWO LDR 5 FOUR
; SET UP ADDRESSES CODE
LDA 6 DAGS
LDA 7 GADS
MUL 0 4
ADD 6 0
ADD 7 0
; START OF COMPARISON CODE
LDB 0 6
LDB 1 7
CMP 0 1
BNZ 0 COMPAREFUNC
; START OF PRINT CODE
LDB 3 6
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 EQUALTO
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 7
TRP 3
LDB 3 DASH
TRP 3
TRP 3
; START OF INCREMENT CODE
INCREMENT LDR 0 ONE
ADD 4 0
SUB 5 4
BNZ 5 WHILETWO
; NEW LINES FOR FINAL PART
LDB 3 NEWLINE
TRP 3
TRP 3
; BEGING OF FINAL PART
;
LDA 0 DAGS
LDA 1 GADS
LDR 3 0
TRP 1
LDB 3 SPACE
TRP 3
LDB 3 DASH
TRP 3
LDB 3 SPACE
TRP 3
LDR 3 1
TRP 1
LDB 3 SPACE
TRP 3
LDB 3 EQUALTO
TRP 3
LDB 3 SPACE
TRP 3
LDR 4 0
LDR 5 1
SUB 4 5
MOV 3 4
TRP 1
;
TRP 0
;
COMPAREFUNC LDR 1 ONE
SUB 0 1
BNZ 0 ZEROREGISLESS
LDB 3 6
TRP 3
LDB 3 SPACE
TRP 3
; USING THE REL VARIBLE NOT SURE IF IT MATTERS
LDB 3 GREATERTHAN
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 7
TRP 3
LDB 3 DASH
TRP 3
TRP 3
JMP INCREMENT
ZEROREGISLESS LDB 3 6
TRP 3
LDB 3 SPACE
TRP 3
; USING THE REL VARIBLE NOT SURE IF IT MATTERS
LDB 3 LESSTHAN
TRP 3
LDB 3 SPACE
TRP 3
LDB 3 7
TRP 3
LDB 3 DASH
TRP 3
TRP 3
JMP INCREMENT